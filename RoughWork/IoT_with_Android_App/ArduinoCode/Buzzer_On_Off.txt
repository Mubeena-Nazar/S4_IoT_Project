#include <WiFi.h>
#include <AsyncTCP.h>
#include <ESPAsyncWebServer.h>

const char* ssid = "Fiber Connection";
const char* password = "Siyadar5";
const int trigPin = 5;
const int echoPin = 19;
int LED_BUILTIN = 2;


//define sound speed in cm/uS
#define SOUND_SPEED 0.034
#define CM_TO_INCH 0.393701
long duration;
float distanceCm;
float distanceInch;


void song_on(){
  digitalWrite(LED_BUILTIN, HIGH);
  delay(100);
  digitalWrite(LED_BUILTIN, LOW);
  delay(100);
  digitalWrite(LED_BUILTIN, HIGH);
  delay(100);
  digitalWrite(LED_BUILTIN, LOW);
  delay(100);
}

void song_off(){
  digitalWrite(LED_BUILTIN, LOW);
  delay(100);
}


AsyncWebServer server(80);

const char index_html[] PROGMEM = R"rawliteral(
<html>
<body>
<h3>hello world!</h3>
%BUTTONPLACEHOLDER%
</body>
</html>
)rawliteral";

String processor(const String& var){
  if(var == "BUTTONPLACEHOLDER"){
    String buttons = "<h2>ok</h2>";
    return buttons;
  }
  return String();
}

void setup() {
  Serial.begin(115200); // Starts the serial communication
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode (LED_BUILTIN, OUTPUT);


  
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(2000);
    Serial.println("Connecting to WiFi..");
  }

  Serial.println(WiFi.localIP());

   server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    Serial.println("Got request");
    request->send_P(200, "text/html", index_html, processor);
  });

     server.on("/on_buzzer", HTTP_GET, [](AsyncWebServerRequest *request){
    Serial.println("Got buzzer request ON  ");
    song_on();
    //request->send_P(200, "text/html",  index_html, processor);
  });

     server.on("/off_buzzer", HTTP_GET, [](AsyncWebServerRequest *request){
    Serial.println("Got buzzer request OFF");
    song_off();
    //request->send_P(200, "text/html",  index_html, processor);
  });
  server.begin();
}
void loop() {
  
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // Calculate the distance
  distanceCm = duration * SOUND_SPEED/2;
  
  // Prints the distance in the Serial Monitor
  Serial.print("Distance (cm): ");
  Serial.println(distanceCm);
  
  delay(1000);
}













/*
 * 
 * #include <WiFi.h>

const char* ssid = "Gray_hat:)";
const char* password = "1010101010";

void setup() {
  Serial.begin(115200);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }

  Serial.println(WiFi.localIP());
}

void loop() {
}
 */
